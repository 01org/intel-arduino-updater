<?xml version="1.0" encoding="utf-8"?>
<project name="firmware-updater" default="package" basedir=".">

    <!-- ====================================================================== -->
    <!-- Build environment properties                                           -->
    <!-- ====================================================================== -->
    <property name="build.name" value="firmware-updater"/>
    <property name="build.friendlyName" value="Firmware Updater"/>
    <property name="build.shell.version" value="1.0.0"/>
    <property name="build.license" value="GNU General Public License"/>

    <property name="build.dir" location="${basedir}/output"/>
    <property name="build.driver.dir.name" value="Galileo Driver"/>
    <property name="build.driver.dir" location="${basedir}/${build.driver.dir.name}"/>
    <property name="build.src.dir" location="${basedir}/src/main/java"/>
    <property name="build.resources.dir" location="${basedir}/src/main/resources"/>

    <!-- Get the firmware file name -->
    <pathconvert property="capsules.dir.list" pathsep="${line.separator}">
        <fileset dir="${build.resources.dir}/capsules">
            <include name="*.cap"/>
        </fileset>
    </pathconvert>
    <loadresource property="capsule.file.path">
        <string value="${capsules.dir.list}"/>
        <filterchain>
            <headfilter lines="1"/>
        </filterchain>
    </loadresource>
    <basename property="build.firmware.version" file="${capsule.file.path}" suffix=".cap"/>
    
    <property name="build.classes.dir" location="${build.dir}/classes"/>
    <property name="build.jarName" value="${build.name}-${build.firmware.version}"/>
    <property name="build.mainClassName" value="com.intel.galileo.flash.tool.FirmwareUpdateTool"/>
    
    <property name="build.nativeLauncher.dir" location="${basedir}/native-launcher-libs"/>
    <property name="build.jarbundler.dir" location="${build.nativeLauncher.dir}" />
    <property name="build.about.version" value="Shell[${build.shell.version}] Firmware[${build.firmware.version}]"/>
    <property name="build.zipName" value="${build.name}-${build.firmware.version}"/>

    <!-- ====================================================================== -->
    <!-- Defining system properties                                             -->
    <!-- ====================================================================== -->
    <presetdef name="javac">
        <javac includeantruntime="false" />
    </presetdef>
	<condition property="isMac">
		<os family="mac"/>
	</condition>
	<condition property="isWindows">
		<os family="windows"/>
	</condition>
	<condition property="isLinux">
	    <and>
	        <os family="unix" />
	        <not><os family="mac" /></not>
        </and>
	</condition>

    <!-- ====================================================================== -->
    <!-- Defining classpaths                                                    -->
    <!-- ====================================================================== -->
    <path id="build.classpath">
        <pathelement location="${build.resources.dir}/"/>
    </path>

    <!-- ====================================================================== -->
    <!-- Cleaning up target                                                     -->
    <!-- ====================================================================== -->
    <target name="clean" description="Clean the output directory">
        <delete dir="${build.dir}"/>
    </target>

    <!-- ====================================================================== -->
    <!-- Sanity checks                                                          -->
    <!-- ====================================================================== -->
    <target name="sanity-checks" description="Sanity checks">
        <fail unless="capsule.file.path">
        Capsule file is missing!
        Please add x.x.x.cap into ${build.resources.dir}/capsules/
        </fail>
    </target>

    <!-- ====================================================================== -->
    <!-- Write a text file containint version numbers                           -->
    <!-- ====================================================================== -->
    <target name="write-version-file" depends="sanity-checks" description="Sanity checks">
        <property environment="env"/>
        <echo file="${build.resources.dir}/versions.properties">APP_VER=${build.shell.version}${line.separator}</echo>
    </target>

    <!-- ====================================================================== -->
    <!-- Compilation target                                                     -->
    <!-- ====================================================================== -->
    <target name="compile" depends="sanity-checks,write-version-file" description="Compile the code">
        <move file="${capsule.file.path}" tofile="${build.resources.dir}/capsules/firmware.cap"/>
        <mkdir dir="${build.classes.dir}"/>
        <javac target="1.6" source="1.6"
               srcdir="${build.src.dir}" 
               classpathref="build.classpath" 
               destdir="${build.classes.dir}"/>
        <copy todir="${build.classes.dir}">
            <fileset dir="${build.resources.dir}"/>
        </copy>
    </target>

    <!-- ====================================================================== -->
    <!-- Jar target before creating the native app                              -->
    <!-- ====================================================================== -->
    <target name="jar" depends="compile" description="Create the Jar">
        <jar basedir="${build.classes.dir}"
             jarfile="${build.dir}/${build.jarName}.jar" 
             compress="true">
             <zipgroupfileset dir="${build.resources.dir}/jssc" includes="jssc.jar"/>
             <manifest>
                <attribute name="Main-Class" value="${build.mainClassName}"/>
            </manifest>
        </jar>
    </target>

    <!-- ====================================================================== -->
    <!-- Package the Jar into a native app                                      -->
    <!-- ====================================================================== -->
    <target name="package" depends="jar,package-linux,package-windows,package-osx" description="Create the native apps"/>

    <!-- ====================================================================== -->
    <!-- Private targets. Do not call manually.                                 -->
    <!-- ====================================================================== -->
    <target name="package-linux"   if="isLinux">
        <property name="build.launch4j.dir" location="${build.nativeLauncher.dir}/launch4j/linux" />
        <antcall target="make-exe"/>
        <antcall target="make-script"/>
    </target>
    <target name="package-windows" if="isWindows">
        <property name="build.launch4j.dir" location="${build.nativeLauncher.dir}/launch4j/windows" />
        <antcall target="make-exe"/>
        <antcall target="make-script"/>
    </target>
    <target name="package-osx"     if="isMac">
        <property name="build.launch4j.dir" location="${build.nativeLauncher.dir}/launch4j/osx" />
        <antcall target="make-exe"/>
        <antcall target="make-app"/>
        <antcall target="make-script"/>
    </target>

    <target name="make-exe">
        <taskdef name="launch4j"
                 classname="net.sf.launch4j.ant.Launch4jTask"
                 classpath="${build.launch4j.dir}/launch4j.jar:${build.launch4j.dir}/lib/xstream.jar"/>
        <launch4j>

            <!-- stayAlive: Debugging window opens in GUI. Needed for Command Line -->
			<!-- singleInstance: Make sure only one instance is running in Windows exe only -->
            <config jar="${build.dir}/${build.jarName}.jar"
                    outfile="${build.dir}/${build.jarName}.exe"
                    headerType="console"
		    	    stayAlive="true"
                    icon="${basedir}/src/main/resources/icons/application.ico">
		        <singleInstance mutexName="com.intel.galileo.flash.tool.FirmwareUpdateTool" />
                <jre minVersion="1.6.0"/>
            </config>
        </launch4j>
        <zip destfile="${build.dir}/${build.jarName}.exe.zip">
            <fileset file="${build.dir}/${build.jarName}.exe" />
            <zipfileset dir="${build.driver.dir}" prefix="${build.driver.dir.name}"/>
        </zip>
    </target>
    <target name="make-app">
        <taskdef name="jarbundler"
                 classname="net.sourceforge.jarbundler.JarBundler"
                 classpath="${build.jarbundler.dir}/jarbundler-2.3.1.jar"/>
        <jarbundler mainclass="${build.mainClassName}"
                    name="${build.friendlyName}"
                    dir="${build.dir}"
                    build=""
                    version="${build.about.version}"
                    icon="${basedir}/src/main/resources/icons/application.icns"
                    jvmversion="1.6+"
                    jar="${build.dir}/${build.jarName}.jar"
        />
        <exec executable="zip" dir="${build.dir}" failonerror="true">
            <arg value="--quiet"/>
            <arg value="--recurse-paths"/>
            <arg value="--symlinks"/>
            <arg value="${build.friendlyName}.app.zip"/>
            <arg value="${build.friendlyName}.app"/>
        </exec>
    </target>
    <target name="make-script">
        <concat binary="yes" destfile="${build.dir}/${build.jarName}">
            <fileset file="${build.resources.dir}/linux-launcher.sh"/>
            <fileset file="${build.dir}/${build.jarName}.jar" />
        </concat>
        <chmod file="${build.dir}/${build.jarName}" perm="a+x"/>
    </target>
</project>
